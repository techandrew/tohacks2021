[{"D:\\Projects\\Collaborations\\HINT\\AirPower-Web\\src\\index.js":"1","D:\\Projects\\Collaborations\\HINT\\AirPower-Web\\src\\App.jsx":"2","D:\\Projects\\Collaborations\\HINT\\AirPower-Web\\src\\pages\\index.jsx":"3","D:\\Projects\\Collaborations\\HINT\\AirPower-Web\\src\\pages\\login\\index.jsx":"4","D:\\Projects\\Collaborations\\HINT\\AirPower-Web\\src\\pages\\landing\\index.jsx":"5","D:\\Projects\\Collaborations\\HINT\\AirPower-Web\\src\\pages\\dashboard\\index.jsx":"6","D:\\Projects\\Collaborations\\HINT\\AirPower-Web\\src\\contexts\\AuthContext.js":"7","D:\\Projects\\Collaborations\\HINT\\AirPower-Web\\src\\firebase.js":"8","D:\\Projects\\Collaborations\\HINT\\AirPower-Web\\src\\shared_components\\PrivateRoute.jsx":"9","D:\\Projects\\Collaborations\\HINT\\AirPower-Web\\src\\shared_components\\DashboardWrapper.jsx":"10","D:\\Projects\\Collaborations\\HINT\\AirPower-Web\\src\\shared_components\\Sidebar\\index.jsx":"11","D:\\Projects\\Collaborations\\HINT\\AirPower-Web\\src\\pages\\complaints\\index.jsx":"12","D:\\Projects\\Collaborations\\HINT\\AirPower-Web\\src\\pages\\clusters\\index.jsx":"13","D:\\Projects\\Collaborations\\HINT\\AirPower-Web\\src\\pages\\dashboard\\components\\index.jsx":"14","D:\\Projects\\Collaborations\\HINT\\AirPower-Web\\src\\pages\\dashboard\\components\\EnergyConsumption\\index.jsx":"15","D:\\Projects\\Collaborations\\HINT\\AirPower-Web\\src\\pages\\dashboard\\components\\ProductionCost\\index.jsx":"16","D:\\Projects\\Collaborations\\HINT\\AirPower-Web\\src\\pages\\dashboard\\components\\TheftStatus\\index.jsx":"17","D:\\Projects\\Collaborations\\HINT\\AirPower-Web\\src\\pages\\dashboard\\components\\PowerConsumptionGeneration\\index.jsx":"18","D:\\Projects\\Collaborations\\HINT\\AirPower-Web\\src\\pages\\dashboard\\components\\DashMapCard\\index.jsx":"19","D:\\Projects\\Collaborations\\HINT\\AirPower-Web\\src\\pages\\dashboard\\components\\Complaints\\index.jsx":"20","D:\\Projects\\Collaborations\\HINT\\AirPower-Web\\src\\pages\\dashboard\\components\\ServerUptime\\index.jsx":"21","D:\\Projects\\Collaborations\\HINT\\AirPower-Web\\src\\pages\\dashboard\\components\\DemoCard\\index.jsx":"22","D:\\Projects\\Collaborations\\HINT\\AirPower-Web\\src\\constants\\constants.js":"23","D:\\Projects\\Collaborations\\HINT\\AirPower-Web\\src\\pages\\dashboard\\components\\DashMap\\index.jsx":"24"},{"size":223,"mtime":1608391180972,"results":"25","hashOfConfig":"26"},{"size":1298,"mtime":1608391161441,"results":"27","hashOfConfig":"26"},{"size":281,"mtime":1608379371923,"results":"28","hashOfConfig":"26"},{"size":2770,"mtime":1608377361076,"results":"29","hashOfConfig":"26"},{"size":7613,"mtime":1608407358878,"results":"30","hashOfConfig":"26"},{"size":1366,"mtime":1608391896275,"results":"31","hashOfConfig":"26"},{"size":1828,"mtime":1608376293873,"results":"32","hashOfConfig":"26"},{"size":542,"mtime":1608375294700,"results":"33","hashOfConfig":"26"},{"size":447,"mtime":1608376451056,"results":"34","hashOfConfig":"26"},{"size":247,"mtime":1608379173114,"results":"35","hashOfConfig":"26"},{"size":2288,"mtime":1608391172796,"results":"36","hashOfConfig":"26"},{"size":9788,"mtime":1608403912377,"results":"37","hashOfConfig":"26"},{"size":382,"mtime":1608404218175,"results":"38","hashOfConfig":"26"},{"size":591,"mtime":1608391735998,"results":"39","hashOfConfig":"26"},{"size":3309,"mtime":1608391226685,"results":"40","hashOfConfig":"26"},{"size":2715,"mtime":1608391226853,"results":"41","hashOfConfig":"26"},{"size":969,"mtime":1608391227068,"results":"42","hashOfConfig":"26"},{"size":2730,"mtime":1608391226755,"results":"43","hashOfConfig":"26"},{"size":3026,"mtime":1608391226490,"results":"44","hashOfConfig":"26"},{"size":2596,"mtime":1608391226338,"results":"45","hashOfConfig":"26"},{"size":967,"mtime":1608391226935,"results":"46","hashOfConfig":"26"},{"size":1820,"mtime":1608391226573,"results":"47","hashOfConfig":"26"},{"size":7286,"mtime":1608391312986,"results":"48","hashOfConfig":"26"},{"size":5551,"mtime":1608404233472,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"t6v9hw",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"52"},"D:\\Projects\\Collaborations\\HINT\\AirPower-Web\\src\\index.js",[],["110","111"],"D:\\Projects\\Collaborations\\HINT\\AirPower-Web\\src\\App.jsx",[],"D:\\Projects\\Collaborations\\HINT\\AirPower-Web\\src\\pages\\index.jsx",[],"D:\\Projects\\Collaborations\\HINT\\AirPower-Web\\src\\pages\\login\\index.jsx",["112","113"],"import React, { useState, useEffect } from \"react\";\r\n\r\n// Components\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Swal from \"sweetalert2\";\r\nimport MuiPhoneNumber from \"material-ui-phone-number\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\n// Styles\r\nimport \"./styles/index.scss\";\r\nimport Lottie from \"lottie-react-web\";\r\nimport animation from \"./styles/lottie.json\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\n\r\nconst LoginPage = () => {\r\n  const history = useHistory();\r\n  const { login, currentUser } = useAuth();\r\n  const [validNumber, setValidNumber] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentNumber, setCurrentNumber] = useState(\"+91\");\r\n\r\n  useEffect(() => {\r\n    if (currentUser != null) history.push(\"/dashboard/home\");\r\n  }, []);\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      // setError(\"\");\r\n      setLoading(true);\r\n      await login(currentNumber);\r\n      // history.push(\"/\");\r\n    } catch {\r\n      console.log(\"FAILED TO AUTH\");\r\n      setLoading(false);\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops...\",\r\n        text: \"Something went wrong!\",\r\n      });\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <section className=\"login__wrapper\">\r\n        <div className=\"login__box__container\">\r\n          <div className=\"lottie__wrapper\">\r\n            <Lottie\r\n              options={{\r\n                animationData: animation,\r\n                loop: true,\r\n              }}\r\n            />\r\n          </div>\r\n          <h1 className=\"login__header\">Let's, Log In.</h1>\r\n          <div className=\"get__otp__wrapper\">\r\n            <MuiPhoneNumber\r\n              className=\"phone__number\"\r\n              defaultCountry={\"in\"}\r\n              regions={\"asia\"}\r\n              value={currentNumber}\r\n              onChange={(e) => {\r\n                setCurrentNumber(e);\r\n\r\n                if (e.length == 15 && !validNumber) setValidNumber(true);\r\n                else if (validNumber) setValidNumber(false);\r\n              }}\r\n            />\r\n            ,\r\n            <div className=\"otp__button__wrapper\">\r\n              <Button\r\n                className=\"otp__button\"\r\n                variant=\"contained\"\r\n                onClick={handleSubmit}\r\n                color=\"primary\"\r\n                disabled={!validNumber || loading}\r\n                size=\"large\"\r\n              >\r\n                {loading && <CircularProgress color=\"primary\" size={20} />}\r\n                <div className=\"otp__button__text\">Get OTP</div>\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","D:\\Projects\\Collaborations\\HINT\\AirPower-Web\\src\\pages\\landing\\index.jsx",["114","115","116","117","118","119","120","121","122","123","124","125","126","127"],"import React, { useEffect } from \"react\";\r\nimport \"./styles/index.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Typed from \"react-typed\";\r\n\r\nexport default function LandingPage() {\r\n  const useScript = (url) => {\r\n    useEffect(() => {\r\n      const script = document.createElement(\"script\");\r\n\r\n      script.src = url;\r\n      script.async = true;\r\n\r\n      document.body.appendChild(script);\r\n\r\n      return () => {\r\n        document.body.removeChild(script);\r\n      };\r\n    }, [url]);\r\n  };\r\n\r\n  //   useEffect(() => {\r\n  //     const script = document.createElement(\"script\");\r\n\r\n  //     script.src = \"scripts/gsap-animations.js\";\r\n  //     script.async = true;\r\n\r\n  //     document.body.appendChild(script);\r\n\r\n  //     return () => {\r\n  //       document.body.removeChild(script);\r\n  //     };\r\n  //   }, []);\r\n\r\n  useScript(\r\n    \"https://cdnjs.cloudflare.com/ajax/libs/gsap/2.0.2/TweenMax.min.js\"\r\n  );\r\n  useScript(\r\n    \"https://cdnjs.cloudflare.com/ajax/libs/ScrollMagic/2.0.6/ScrollMagic.js\"\r\n  );\r\n  useScript(\r\n    \"https://cdnjs.cloudflare.com/ajax/libs/ScrollMagic/2.0.6/plugins/animation.gsap.js\"\r\n  );\r\n  useScript(\r\n    \"https://cdnjs.cloudflare.com/ajax/libs/ScrollMagic/2.0.6/plugins/debug.addIndicators.min.js\"\r\n  );\r\n  useScript(\"scripts/gsap-animations.js\");\r\n\r\n  return (\r\n    <section className=\"landing__section\">\r\n      <nav className=\"nav__wrapper\">\r\n        <span className=\"nav__logo\">\r\n          <img\r\n            src=\"images/logo-dark.png\"\r\n            alt=\"AirPower Logo\"\r\n            className=\"nav__logo__img\"\r\n          />\r\n        </span>\r\n\r\n        <span className=\"nav__links\">\r\n          <Link to=\"/login\" className=\"nav__link signup__btn\">\r\n            Admin Login\r\n          </Link>\r\n        </span>\r\n      </nav>\r\n\r\n      <div className=\"landing__wrapper\">\r\n        <div className=\"mac__wrapper\">\r\n          <div className=\"macbook__pro__wrapper\">\r\n            <img\r\n              id=\"study__background\"\r\n              className=\"mac__desktop\"\r\n              src=\"images/landing/bg2.png\"\r\n            />\r\n\r\n            <div className=\"mac__screens\">\r\n              <div className=\"col\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-3\">\r\n                    <img\r\n                      id=\"top__left__1\"\r\n                      className=\"mac__screen\"\r\n                      src=\"images/landing/top-left-left.png\"\r\n                    />\r\n                    <img\r\n                      id=\"top__left__bottom\"\r\n                      className=\"mac__screen\"\r\n                      src=\"images/landing/top-left-bottom.png\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-3\">\r\n                    <img\r\n                      id=\"top__left__2\"\r\n                      className=\"mac__screen\"\r\n                      src=\"images/landing/top-left-right.png\"\r\n                    />\r\n                    <img\r\n                      id=\"top__left__bottom__2\"\r\n                      className=\"mac__screen\"\r\n                      src=\"images/landing/top-right-bottom.png\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"col-md-6\">\r\n                    <img\r\n                      id=\"top__right\"\r\n                      className=\"mac__screen\"\r\n                      src=\"images/landing/top-right.png\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6\">\r\n                    <img\r\n                      id=\"bottom__left\"\r\n                      className=\"mac__screen\"\r\n                      src=\"images/landing/bottom-left.png\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-4\">\r\n                    <img\r\n                      id=\"bottom__right\"\r\n                      className=\"mac__screen\"\r\n                      src=\"images/landing/bottom-right.png\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mac__text\">\r\n              <h1>AirPower</h1>\r\n              <h2>\r\n                Smart{\" \"}\r\n                <Typed\r\n                  loop\r\n                  typeSpeed={40}\r\n                  backSpeed={60}\r\n                  strings={[\r\n                    \"Power Distribution\",\r\n                    \"Savings\",\r\n                    \"Home Automation\",\r\n                    \"Energy Management\",\r\n                  ]}\r\n                  smartBackspace\r\n                  shuffle={false}\r\n                  backDelay={1000}\r\n                  fadeOut={false}\r\n                  fadeOutDelay={100}\r\n                  loopCount={0}\r\n                  showCursor\r\n                  cursorChar=\"|\"\r\n                />\r\n              </h2>\r\n              <img src=\"images/landing/device.png\" className=\"mac__device\" />\r\n\r\n              {/* <div class=\"call__to__action\">\r\n            <button class=\"start__learning__btn\">Start Learning</button>\r\n          </div> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"promotion__text\">\r\n          <h2>Powerful dashboard</h2>\r\n          <p>\r\n            An incredibly powerful & intutive dashboard, for seamless\r\n            integration between all the services.\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"complaints__info__text\">\r\n          <h2>Complaints Tracker</h2>\r\n          <p>\r\n            Keep on track with all the issues, that your consumers are facing,\r\n            in a powerful yet simple way.\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"theft__info__text\">\r\n          <h2>Theft Detection</h2>\r\n          <p>\r\n            Stay on track with all the issues, that your consumers are facing,\r\n            in a powerful yet simple way.\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"map__cluster__overlay\">\r\n          <div className=\"map__cluster__info__text\">\r\n            <h2>Map Clusters</h2>\r\n            <p>\r\n              Realtime updates that can pan across a whole city, state or even a\r\n              continent, helping you detect power fluctations, outrage etc.\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"there__info__text\">\r\n          <h2>You'd think, that's all?</h2>\r\n          <p>No, there's more!</p>\r\n        </div>\r\n      </div>\r\n\r\n      <section className=\"showcase__wrapper\">\r\n        <div className=\"showcase__phone\">\r\n          <img\r\n            src=\"images/landing/mockups/center.png\"\r\n            className=\"showcase__phone__img\"\r\n            id=\"phone__main\"\r\n          />\r\n          <img\r\n            src=\"images/landing/mockups/left2.png\"\r\n            className=\"showcase__phone__img\"\r\n            id=\"phone__left__2\"\r\n          />\r\n          <img\r\n            src=\"images/landing/mockups/left.png\"\r\n            className=\"showcase__phone__img\"\r\n            id=\"phone__left__1\"\r\n          />\r\n          <img\r\n            src=\"images/landing/mockups/right.png\"\r\n            className=\"showcase__phone__img\"\r\n            id=\"phone__right__1\"\r\n          />\r\n\r\n          <img\r\n            src=\"images/landing/mockups/right2.png\"\r\n            className=\"showcase__phone__img\"\r\n            id=\"phone__right__2\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"app__informatic__1\">\r\n          <h2>Perfect Companion</h2>\r\n          <p>\r\n            Provide an immersive experience to your consumers, with our\r\n            companion app.\r\n          </p>\r\n        </div>\r\n      </section>\r\n    </section>\r\n  );\r\n}\r\n","D:\\Projects\\Collaborations\\HINT\\AirPower-Web\\src\\pages\\dashboard\\index.jsx",[],"D:\\Projects\\Collaborations\\HINT\\AirPower-Web\\src\\contexts\\AuthContext.js",["128"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { auth } from \"../firebase\";\r\nimport fb from \"firebase/app\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const history = useHistory();\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      setCurrentUser(user);\r\n      setLoading(false);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  let recaptcha = new fb.auth.RecaptchaVerifier(\"recaptcha\", {\r\n    size: \"invisible\",\r\n  });\r\n\r\n  async function login(phone) {\r\n    auth.signInWithPhoneNumber(phone, recaptcha).then((e) => {\r\n      Swal.fire({\r\n        title: \"Verify OTP\",\r\n        text: `Enter the One-Time Password sent to ${phone}`,\r\n        input: \"number\",\r\n        closeOnConfirm: false,\r\n        animation: \"slide-from-top\",\r\n        confirmButtonText: \"Confirm\",\r\n        inputPlaceholder: \"OTP\",\r\n        inputValidator: (value) => {\r\n          if (value.length < 6) {\r\n            return \"OTP must be of 6 digits\";\r\n          } else if (value.length == 6) {\r\n            e.confirm(value).then((result) => {\r\n              setCurrentUser(result.user);\r\n              history.push(\"/dashboard/home\");\r\n            });\r\n          }\r\n        },\r\n      });\r\n    });\r\n  }\r\n\r\n  async function logout() {\r\n    await auth.signOut();\r\n    history.push(\"/\");\r\n  }\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    logout,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n","D:\\Projects\\Collaborations\\HINT\\AirPower-Web\\src\\firebase.js",[],"D:\\Projects\\Collaborations\\HINT\\AirPower-Web\\src\\shared_components\\PrivateRoute.jsx",[],"D:\\Projects\\Collaborations\\HINT\\AirPower-Web\\src\\shared_components\\DashboardWrapper.jsx",[],"D:\\Projects\\Collaborations\\HINT\\AirPower-Web\\src\\shared_components\\Sidebar\\index.jsx",[],"D:\\Projects\\Collaborations\\HINT\\AirPower-Web\\src\\pages\\complaints\\index.jsx",["129","130","131","132","133","134","135","136","137","138","139"],"import React, { useState, useEffect } from \"react\";\r\nimport DashboardWrapper from \"../../shared_components/DashboardWrapper\";\r\nimport app from \"../../firebase\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport * as timeago from \"timeago.js\";\r\nimport \"./styles/index.scss\";\r\nimport Lottie from \"lottie-react-web\";\r\nimport animation from \"./styles/lottie.json\";\r\nimport GoogleMapReact from \"google-map-react\";\r\n\r\nconst ComplaintsPage = () => {\r\n  const [complaints, setComplaints] = useState(null);\r\n  const [pendingCounter, SetPendingCounter] = useState(0);\r\n  const [assignedCounter, SetAssignedCounter] = useState(0);\r\n  const [CompletedCounter, SetCompletedCounter] = useState(0);\r\n  const [selectedIndex, setSelectedIndex] = useState(null);\r\n  const [currentTab, setCurrentTab] = useState(null);\r\n\r\n  const statusToString = (statusCode) => {\r\n    if (statusCode === 0) return \"Pending\";\r\n    else if (statusCode === 1) return \"Assigned\";\r\n    else return \"Completed\";\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchComplaintsFromFirestore();\r\n  }, []);\r\n\r\n  const fetchComplaintsFromFirestore = async () => {\r\n    await app\r\n      .firestore()\r\n      .collection(\"complaints\")\r\n      .orderBy(\"timestamp\", \"desc\")\r\n      .onSnapshot((e) => {\r\n        const _complaints = [];\r\n        let _pending = 0,\r\n          _assigned = 0,\r\n          _completed = 0;\r\n\r\n        e.docs.forEach((doc) => {\r\n          let _data = doc.data();\r\n\r\n          if (_data[\"status\"] == 0) {\r\n            _pending += 1;\r\n          } else if (_data[\"status\"] == 1) {\r\n            _assigned += 1;\r\n          } else {\r\n            _completed += 1;\r\n          }\r\n\r\n          _complaints.push({\r\n            id: doc.id,\r\n            account: _data[\"account_no\"],\r\n            category: _data[\"category\"],\r\n            summary: _data[\"summary\"],\r\n            status: _data[\"status\"],\r\n            timestamp: _data[\"timestamp\"],\r\n            user: _data[\"user_name\"],\r\n            location: _data[\"geo_location\"],\r\n          });\r\n        });\r\n\r\n        setComplaints(_complaints);\r\n        SetPendingCounter(_pending);\r\n        SetAssignedCounter(_assigned);\r\n        SetCompletedCounter(_completed);\r\n      });\r\n  };\r\n\r\n  const getTabbedComplaints = () => {\r\n    if (currentTab == null) return complaints;\r\n    if (currentTab == 0) return complaints.filter((e) => e.status == 0);\r\n    if (currentTab == 1) return complaints.filter((e) => e.status == 1);\r\n    if (currentTab == 2) return complaints.filter((e) => e.status == 2);\r\n  };\r\n\r\n  return (\r\n    <DashboardWrapper>\r\n      {!complaints && (\r\n        <div className=\"loading__wrapper\">\r\n          <CircularProgress color=\"primary\" />\r\n        </div>\r\n      )}\r\n      {complaints && (\r\n        <section className=\"complaints__wrapper row\">\r\n          <div className=\"complaints__tabs col-md-3\">\r\n            <h1 className=\"complaints__header\">Complaints Tracker</h1>\r\n\r\n            <div\r\n              className=\"complaint__tab\"\r\n              onClick={() => {\r\n                setCurrentTab(null);\r\n                setSelectedIndex(null);\r\n              }}\r\n            >\r\n              All ({`${pendingCounter + assignedCounter + CompletedCounter}`})\r\n            </div>\r\n\r\n            <div\r\n              className=\"complaint__tab\"\r\n              onClick={() => {\r\n                setCurrentTab(0);\r\n                setSelectedIndex(null);\r\n              }}\r\n            >\r\n              Pending ({`${pendingCounter}`})\r\n            </div>\r\n            <div\r\n              className=\"complaint__tab\"\r\n              onClick={() => {\r\n                setCurrentTab(1);\r\n                setSelectedIndex(null);\r\n              }}\r\n            >\r\n              Assigned ({`${assignedCounter}`})\r\n            </div>\r\n            <div\r\n              className=\"complaint__tab\"\r\n              onClick={() => {\r\n                setCurrentTab(2);\r\n                setSelectedIndex(null);\r\n              }}\r\n            >\r\n              Completed ({`${CompletedCounter}`})\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"complaints__listings__sidebar col-md-3\">\r\n            {getTabbedComplaints().map((complaint, index) => {\r\n              return (\r\n                <div\r\n                  className={\r\n                    index == selectedIndex\r\n                      ? \"complaint__listing active\"\r\n                      : \"complaint__listing\"\r\n                  }\r\n                  key={complaint.id}\r\n                  onClick={() => setSelectedIndex(index)}\r\n                >\r\n                  <div className=\"top__details\">\r\n                    <div className=\"account__number\">{complaint.account}</div>\r\n                    <div className=\"time__ago\">\r\n                      {timeago.format(complaint.timestamp.toDate())}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"complaint__category\">\r\n                    {complaint.category}\r\n                  </div>\r\n\r\n                  <div className=\"complaint__user\">{complaint.user}</div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          {selectedIndex === null && (\r\n            <div className=\"complaint__lottie__wrapper\">\r\n              <Lottie\r\n                options={{\r\n                  animationData: animation,\r\n                  loop: true,\r\n                }}\r\n              />\r\n            </div>\r\n          )}\r\n          {selectedIndex !== null && (\r\n            <div className=\"complaints__content col-md-6\">\r\n              <div className=\"row top__details\">\r\n                <div className=\"col-md-6\">\r\n                  <div className=\"category__label\">Category</div>\r\n                  <div className=\"category__name\">\r\n                    {getTabbedComplaints()[selectedIndex].category}\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-6\" id=\"account_col\">\r\n                  <div className=\"category__label\">Account Number</div>\r\n                  <div className=\"account__number\">\r\n                    {getTabbedComplaints()[selectedIndex].account}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row status\">\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"category__label\">Status</div>\r\n                  <div className=\"complaint__select\">\r\n                    <select\r\n                      id=\"standard-select\"\r\n                      defaultValue={getTabbedComplaints()[selectedIndex].status}\r\n                      onChange={async (e) => {\r\n                        if (currentTab !== null && selectedIndex - 1 > 0) {\r\n                          setSelectedIndex(selectedIndex - 1);\r\n                        } else {\r\n                          setSelectedIndex(null);\r\n                        }\r\n\r\n                        await app\r\n                          .firestore()\r\n                          .collection(\"complaints\")\r\n                          .doc(getTabbedComplaints()[selectedIndex].id)\r\n                          .update({\r\n                            status: parseInt(e.target.value),\r\n                          });\r\n                      }}\r\n                    >\r\n                      <option value=\"0\">Pending</option>\r\n                      <option value=\"1\">Assigned</option>\r\n                      <option value=\"2\">Completed</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row complaint__content\">\r\n                <div className=\"category__label\">Summary of Issue</div>\r\n                <p className=\"issue__summary\">\r\n                  {getTabbedComplaints()[selectedIndex].summary}\r\n                </p>\r\n\r\n                <div\r\n                  className=\"complaint__location\"\r\n                  style={{ width: \"100%\", height: \"50vh\" }}\r\n                >\r\n                  {/* {getTabbedComplaints()[selectedIndex].location[\"latitude\"]}\r\n                    {getTabbedComplaints()[selectedIndex].location[\"longitude\"]} */}\r\n                  <GoogleMapReact\r\n                    draggable={false}\r\n                    bootstrapURLKeys={{\r\n                      key: \"AIzaSyDggofUxTHuVIyd7vsZooPN7JLaA-MvY7E\",\r\n                    }}\r\n                    defaultCenter={{\r\n                      lat: getTabbedComplaints()[selectedIndex].location[\r\n                        \"latitude\"\r\n                      ],\r\n                      lng: getTabbedComplaints()[selectedIndex].location[\r\n                        \"longitude\"\r\n                      ],\r\n                    }}\r\n                    defaultZoom={10}\r\n                  >\r\n                    <MapMarkerComponent\r\n                      lat={\r\n                        getTabbedComplaints()[selectedIndex].location[\r\n                          \"latitude\"\r\n                        ]\r\n                      }\r\n                      lng={\r\n                        getTabbedComplaints()[selectedIndex].location[\r\n                          \"longitude\"\r\n                        ]\r\n                      }\r\n                    />\r\n                  </GoogleMapReact>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </section>\r\n      )}\r\n    </DashboardWrapper>\r\n  );\r\n};\r\n\r\nconst MapMarkerComponent = ({ lat, lng }) => {\r\n  return (\r\n    <div className=\"cluster__marker\">\r\n      <div className=\"map__marker\">\r\n        <img\r\n          className=\"map__marker__image\"\r\n          //   src=\"https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png\"\r\n          src=\"http://ishandeveloper.com/map-marker.png\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComplaintsPage;\r\n","D:\\Projects\\Collaborations\\HINT\\AirPower-Web\\src\\pages\\clusters\\index.jsx",[],"D:\\Projects\\Collaborations\\HINT\\AirPower-Web\\src\\pages\\dashboard\\components\\index.jsx",[],"D:\\Projects\\Collaborations\\HINT\\AirPower-Web\\src\\pages\\dashboard\\components\\EnergyConsumption\\index.jsx",["140"],"import React, { useEffect } from \"react\";\r\nimport Chart from \"chart.js\";\r\n\r\nexport default function EnergyConsumptionCard() {\r\n  useEffect(() => {\r\n    var ctx = document.getElementById(\"chart-0\").getContext(\"2d\");\r\n    var myChart = new Chart(ctx, {\r\n      type: \"line\",\r\n\r\n      data: {\r\n        labels: [\r\n          \"January\",\r\n          \"February\",\r\n          \"March\",\r\n          \"April\",\r\n          \"May\",\r\n          \"June\",\r\n          \"July\",\r\n          \"August\",\r\n          \"September\",\r\n          \"October\",\r\n        ],\r\n        datasets: [\r\n          {\r\n            label: \"Power Consumption\",\r\n            display: true,\r\n            pointStyle: \"line\",\r\n            data: [\r\n              39756,\r\n              32115,\r\n              29086,\r\n              39269,\r\n              23487,\r\n              31673,\r\n              34510,\r\n              36492,\r\n              35671,\r\n              33943,\r\n            ],\r\n            backgroundColor: [\r\n              \"rgba(78,115,223,0.5)\",\r\n              \"rgba(255, 99, 132, 0.2)\",\r\n              \"rgba(54, 162, 235, 0.2)\",\r\n              \"rgba(255, 206, 86, 0.2)\",\r\n              \"rgba(75, 192, 192, 0.2)\",\r\n              \"rgba(153, 102, 255, 0.2)\",\r\n              \"rgba(255, 159, 64, 0.2)\",\r\n            ],\r\n            borderColor: [\r\n              \"rgba(255, 99, 132, 1)\",\r\n              \"rgba(54, 162, 235, 1)\",\r\n              \"rgba(255, 206, 86, 1)\",\r\n              \"rgba(75, 192, 192, 1)\",\r\n              \"rgba(153, 102, 255, 1)\",\r\n              \"rgba(255, 159, 64, 1)\",\r\n            ],\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        aspectRatio: 4,\r\n        legend: {\r\n          display: false,\r\n        },\r\n        responsive: true,\r\n        title: {\r\n          display: false,\r\n          text: \"in (kWh)\",\r\n        },\r\n        tooltips: {\r\n          mode: \"index\",\r\n          intersect: false,\r\n        },\r\n        hover: {\r\n          mode: \"nearest\",\r\n          intersect: true,\r\n        },\r\n        scales: {\r\n          yAxes: [\r\n            {\r\n              display: false,\r\n              stacked: true,\r\n              ticks: {\r\n                beginAtZero: true,\r\n              },\r\n              scaleLabel: {\r\n                display: true,\r\n                labelString: \"Month\",\r\n              },\r\n            },\r\n          ],\r\n          xAxes: [\r\n            {\r\n              display: false,\r\n            },\r\n          ],\r\n        },\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"col-md-6\">\r\n      <div className=\"card widget-flat\">\r\n        <div className=\"card-body\">\r\n          <div className=\"float-right\">\r\n            <i className=\"mdi mdi-account-multiple widget-icon\"></i>\r\n          </div>\r\n          <h5\r\n            className=\"text-muted font-weight-normal mt-0\"\r\n            title=\"Number of Customers\"\r\n          >\r\n            Energy Consumption\r\n          </h5>\r\n          <h3 className=\"mt-3 mb-3\">36,254 kWh</h3>\r\n          <p className=\"mb-0 text-muted\">\r\n            <span className=\"text-success mr-2\">\r\n              <i className=\"fas fa-arrow-up\"></i> 5.27%\r\n            </span>\r\n            <span className=\"text-nowrap\">Since last month</span>\r\n          </p>\r\n        </div>\r\n        <canvas id=\"chart-0\"></canvas>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Projects\\Collaborations\\HINT\\AirPower-Web\\src\\pages\\dashboard\\components\\ProductionCost\\index.jsx",["141"],"import React, { useEffect } from \"react\";\r\nimport Chart from \"chart.js\";\r\n\r\nexport default function ProductionCostCard() {\r\n  useEffect(() => {\r\n    //CHART: PRODUCT COST\r\n\r\n    var ctx = document.getElementById(\"chart-1\").getContext(\"2d\");\r\n    var myChart = new Chart(ctx, {\r\n      type: \"line\",\r\n      data: {\r\n        labels: [\r\n          \"January\",\r\n          \"February\",\r\n          \"March\",\r\n          \"April\",\r\n          \"May\",\r\n          \"June\",\r\n          \"July\",\r\n          \"August\",\r\n          \"September\",\r\n          \"October\",\r\n        ],\r\n        datasets: [\r\n          {\r\n            pointStyle: \"line\",\r\n            data: [\r\n              404036,\r\n              422023,\r\n              518366,\r\n              547765,\r\n              569421,\r\n              443776,\r\n              764522,\r\n              553283,\r\n              1039656,\r\n              744357,\r\n            ],\r\n            backgroundColor: [\"rgba(45,55,68,0.5)\"],\r\n            borderColor: [\"rgba(45, 55, 68, 1)\"],\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        aspectRatio: 4,\r\n        legend: {\r\n          display: false,\r\n        },\r\n        responsive: true,\r\n        title: {\r\n          display: false,\r\n          text: \"in Lakhs\",\r\n        },\r\n        tooltips: {\r\n          mode: \"index\",\r\n          intersect: false,\r\n        },\r\n        hover: {\r\n          mode: \"nearest\",\r\n          intersect: true,\r\n        },\r\n        scales: {\r\n          yAxes: [\r\n            {\r\n              display: false,\r\n              ticks: {\r\n                beginAtZero: true,\r\n              },\r\n              scaleLabel: {\r\n                display: true,\r\n                labelString: \"Month\",\r\n              },\r\n            },\r\n          ],\r\n          xAxes: [\r\n            {\r\n              display: false,\r\n            },\r\n          ],\r\n        },\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"col-md-6\">\r\n      <div className=\"card widget-flat\">\r\n        <div className=\"card-body\">\r\n          <div className=\"float-right\">\r\n            <i className=\"mdi mdi-cart-plus widget-icon\"></i>\r\n          </div>\r\n          <h5\r\n            className=\"text-muted font-weight-normal mt-0\"\r\n            title=\"Number of Orders\"\r\n          >\r\n            Production Cost\r\n          </h5>\r\n          <h3 className=\"mt-3 mb-3\">₹ 5,83,543</h3>\r\n          <p className=\"mb-0 text-muted\">\r\n            <span className=\"text-danger mr-2\">\r\n              <i className=\"fas fa-arrow-down\"></i> 1.08%\r\n            </span>\r\n            <span className=\"text-nowrap\">Since last month</span>\r\n          </p>\r\n        </div>\r\n        <canvas id=\"chart-1\"></canvas>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Projects\\Collaborations\\HINT\\AirPower-Web\\src\\pages\\dashboard\\components\\TheftStatus\\index.jsx",[],"D:\\Projects\\Collaborations\\HINT\\AirPower-Web\\src\\pages\\dashboard\\components\\PowerConsumptionGeneration\\index.jsx",["142"],"import React, { useEffect } from \"react\";\r\nimport Chart from \"chart.js\";\r\n\r\nexport default function PowerConsumptionGenerationCard() {\r\n  useEffect(() => {\r\n    //CHART: MAIN DASH\r\n\r\n    var ctx = document.getElementById(\"chart-main\").getContext(\"2d\");\r\n    var myChart = new Chart(ctx, {\r\n      type: \"line\",\r\n      data: {\r\n        labels: [\r\n          \"January\",\r\n          \"February\",\r\n          \"March\",\r\n          \"April\",\r\n          \"May\",\r\n          \"June\",\r\n          \"July\",\r\n          \"August\",\r\n          \"September\",\r\n          \"October\",\r\n        ],\r\n        datasets: [\r\n          {\r\n            label: \"Consumed\",\r\n            display: true,\r\n            pointStyle: \"line\",\r\n            data: [\r\n              53245,\r\n              47858,\r\n              48654,\r\n              47556,\r\n              35804,\r\n              56707,\r\n              42567,\r\n              61871,\r\n              49617,\r\n              36274,\r\n            ],\r\n            backgroundColor: [\"rgba(45,55,68,0.5)\"],\r\n            borderColor: [\"rgba(78,115,223,1)\"],\r\n            fill: false,\r\n          },\r\n          {\r\n            label: \"Generated\",\r\n            display: true,\r\n            pointStyle: \"line\",\r\n            data: [\r\n              40403,\r\n              42203,\r\n              58366,\r\n              54765,\r\n              56421,\r\n              43776,\r\n              74522,\r\n              53283,\r\n              69656,\r\n              44357,\r\n            ],\r\n            backgroundColor: [\"rgba(0,0,255,0.5)\"],\r\n            borderColor: [\"rgba(255, 0, 0, 1)\"],\r\n            fill: false,\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        aspectRatio: 1.5,\r\n        legend: {\r\n          display: true,\r\n        },\r\n        responsive: true,\r\n        title: {\r\n          display: true,\r\n          text: \"Power Consumption & Generation\",\r\n          fontFamily: \"Poppins\",\r\n          fontSize: 14,\r\n        },\r\n        tooltips: {\r\n          mode: \"index\",\r\n          intersect: false,\r\n        },\r\n        hover: {\r\n          mode: \"nearest\",\r\n          intersect: true,\r\n        },\r\n        scales: {\r\n          yAxes: [\r\n            {\r\n              display: true,\r\n              ticks: {\r\n                beginAtZero: true,\r\n              },\r\n              scaleLabel: {\r\n                display: true,\r\n                labelString: \"in MegaWatts (MW)\",\r\n              },\r\n            },\r\n          ],\r\n          xAxes: [\r\n            {\r\n              display: true,\r\n            },\r\n          ],\r\n        },\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"col-md-6\">\r\n      <div className=\"row card\" id=\"generation__card\">\r\n        <canvas id=\"chart-main\"></canvas>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Projects\\Collaborations\\HINT\\AirPower-Web\\src\\pages\\dashboard\\components\\DashMapCard\\index.jsx",["143","144"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport useSupercluster from \"use-supercluster\";\r\nimport { dummyLocations, lightMapStyles } from \"../../../../constants/constants\";\r\n\r\nconst AnyReactComponent = ({ lat, lng }) => {\r\n  return (\r\n    <div className=\"cluster__marker\">\r\n      <div className=\"map__marker\">\r\n        <img\r\n          className=\"map__marker__image\"\r\n          //   src=\"https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png\"\r\n          src=\"http://ishandeveloper.com/map-marker.png\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ClusterCircle = ({ count, factor }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        width: `${10 + factor * 20}px`,\r\n        height: `${10 + factor * 20}px`,\r\n      }}\r\n      className=\"cluster-marker-circle\"\r\n    >\r\n      {count}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function DashMapCard() {\r\n  const [zoom, setZoom] = useState(10);\r\n  const [bounds, setBounds] = useState(null);\r\n  const mapRef = useRef();\r\n\r\n  const points = dummyLocations.map((location) => ({\r\n    type: \"Feature\",\r\n    properties: {\r\n      cluster: false,\r\n      crimeID: location.index,\r\n      category: \"power\",\r\n    },\r\n    geometry: { type: \"Point\", coordinates: [location.lng, location.lat] },\r\n  }));\r\n\r\n  const { clusters } = useSupercluster({\r\n    points,\r\n    bounds,\r\n    zoom,\r\n    options: { radius: 75, maxZoom: 20 },\r\n  });\r\n\r\n  function createMapOptions(maps) {\r\n    return {\r\n      panControl: false,\r\n      mapTypeControl: false,\r\n      scrollwheel: true,\r\n      styles: lightMapStyles,\r\n    };\r\n  }\r\n  return (\r\n    <div id=\"dash-map\">\r\n      <GoogleMapReact\r\n        // draggable={false}\r\n        bootstrapURLKeys={{ key: \"AIzaSyDggofUxTHuVIyd7vsZooPN7JLaA-MvY7E\" }}\r\n        defaultCenter={{\r\n          lat: 30.7333,\r\n          lng: 76.7794,\r\n        }}\r\n        defaultZoom={10}\r\n        yesIWantToUseGoogleMapApiInternals={true}\r\n        onGoogleApiLoaded={({ map }) => {\r\n          mapRef.current = map;\r\n        }}\r\n        options={createMapOptions}\r\n        onChange={({ zoom, bounds }) => {\r\n          setZoom(zoom);\r\n          setBounds([\r\n            bounds.nw.lng,\r\n            bounds.se.lat,\r\n            bounds.se.lng,\r\n            bounds.nw.lat,\r\n          ]);\r\n        }}\r\n      >\r\n        {clusters.map((cluster, index) => {\r\n          const [lng, lat] = cluster.geometry.coordinates;\r\n          const {\r\n            cluster: isCluster,\r\n            point_count: pointCount,\r\n          } = cluster.properties;\r\n\r\n          if (isCluster) {\r\n            return (\r\n              <ClusterCircle\r\n                key={index}\r\n                lat={lat}\r\n                lng={lng}\r\n                count={pointCount}\r\n                factor={pointCount / points.length}\r\n              />\r\n            );\r\n          }\r\n\r\n          return <AnyReactComponent key={index} lat={lat} lng={lng} />;\r\n        })}\r\n      </GoogleMapReact>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Projects\\Collaborations\\HINT\\AirPower-Web\\src\\pages\\dashboard\\components\\Complaints\\index.jsx",["145","146"],"import React, { useEffect, useState } from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport app from \"../../../../firebase\";\r\n\r\nexport default function ComplaintsCard() {\r\n  const [complaintsCounter, setComplaintsCounter] = useState(null);\r\n\r\n  const fetchComplaintsFromFirestore = async () => {\r\n    await app\r\n      .firestore()\r\n      .collection(\"complaints\")\r\n      .orderBy(\"timestamp\", \"desc\")\r\n      .onSnapshot((e) => {\r\n        let _pending = 0;\r\n        e.docs.forEach((doc) => {\r\n          let _data = doc.data();\r\n\r\n          if (_data[\"status\"] == 0) {\r\n            _pending += 1;\r\n          }\r\n        });\r\n\r\n        setComplaintsCounter(_pending);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchComplaintsFromFirestore();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"col-md-8\">\r\n      <div className=\"card widget-flat\">\r\n        <div className=\"card-body\">\r\n          <div className=\"float-right\">\r\n            <i className=\"mdi mdi-account-multiple widget-icon\"></i>\r\n          </div>\r\n          <h5\r\n            className=\"text-muted font-weight-normal mt-0\"\r\n            title=\"Number of Customers\"\r\n          >\r\n            Complaints\r\n          </h5>\r\n          {complaintsCounter == null && (\r\n            <div\r\n              style={{\r\n                minHeight: \"120px\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <CircularProgress color=\"primary\" />\r\n            </div>\r\n          )}\r\n          {complaintsCounter != null && (\r\n            <>\r\n              {complaintsCounter > 0 && (\r\n                <h3 className=\"mt-3 mb-3\">\r\n                  <i\r\n                    className=\"fas fa-exclamation-triangle\"\r\n                    style={{ color: \"red\" }}\r\n                  ></i>\r\n                  High Priority\r\n                </h3>\r\n              )}\r\n              {complaintsCounter == 0 && (\r\n                <h3 className=\"mt-3 mb-3\">\r\n                  <i\r\n                    className=\"fas fa-check-circle\"\r\n                    style={{ color: \"green\" }}\r\n                  ></i>\r\n                  All Good\r\n                </h3>\r\n              )}\r\n              <p className=\"mb-0 text-muted\">\r\n                <span className=\"text-success mr-2\">\r\n                  {complaintsCounter} Complaints\r\n                </span>\r\n                <span className=\"text-nowrap\">Since last day</span>\r\n              </p>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Projects\\Collaborations\\HINT\\AirPower-Web\\src\\pages\\dashboard\\components\\ServerUptime\\index.jsx",[],"D:\\Projects\\Collaborations\\HINT\\AirPower-Web\\src\\pages\\dashboard\\components\\DemoCard\\index.jsx",[],["147","148"],"D:\\Projects\\Collaborations\\HINT\\AirPower-Web\\src\\constants\\constants.js",[],"D:\\Projects\\Collaborations\\HINT\\AirPower-Web\\src\\pages\\dashboard\\components\\DashMap\\index.jsx",["149","150"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport useSupercluster from \"use-supercluster\";\r\nimport CloseRoundedIcon from \"@material-ui/icons/CloseRounded\";\r\nimport { dummyLocations, darkMapStyles } from \"../../../../constants/constants\";\r\n\r\nfunction getAddressFromCoordinates({ latitude, longitude }) {\r\n  return new Promise((resolve) => {\r\n    const url = `https://reverse.geocoder.ls.hereapi.com/6.2/reversegeocode.json?apiKey=ELNna_rBYh3v_NOR9VgAeuOhI5DhqM8CnsymYdPyTn0&mode=retrieveAddresses&prox=${latitude},${longitude}`;\r\n    fetch(url)\r\n      .then((res) => res.json())\r\n      .then((resJson) => {\r\n        // the response had a deeply nested structure :/\r\n        if (\r\n          resJson &&\r\n          resJson.Response &&\r\n          resJson.Response.View &&\r\n          resJson.Response.View[0] &&\r\n          resJson.Response.View[0].Result &&\r\n          resJson.Response.View[0].Result[0]\r\n        ) {\r\n          resolve(resJson.Response.View[0].Result[0].Location.Address.Label);\r\n        } else {\r\n          //   resolve();\r\n          resolve(\"Location can't be determined\");\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        resolve(\"Location can't be determined\");\r\n        // console.log(\"Error in getAddressFromCoordinates\", e);\r\n        // resolve();\r\n      });\r\n  });\r\n}\r\n\r\nconst AnyReactComponent = ({ lat, lng }) => {\r\n  const [showDialog, setShowDialog] = useState(false);\r\n  const [locationName, setLocationName] = useState(\"Calculating..\");\r\n\r\n  async function getLocation() {\r\n    let _ = await getAddressFromCoordinates({ latitude: lat, longitude: lng });\r\n    setLocationName(_);\r\n  }\r\n  useEffect(() => {\r\n    getLocation();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"cluster__marker\">\r\n      {showDialog && (\r\n        <div className=\"cluster__card\" onClick={() => setShowDialog(false)}>\r\n          <div className=\"cluster__card__content\">\r\n            <h2>7.64 kWh</h2>\r\n            <div className=\"location__address\">{locationName}</div>\r\n          </div>\r\n          {/* <i className=\"fas fa-times-circle\" id=\"cluster__close__icon\"></i> */}\r\n          <IconButton\r\n            onClick={() => {\r\n              setShowDialog(false);\r\n            }}\r\n            id=\"cluster__close__icon\"\r\n            iconStyle={{ width: \"20px\", height: \"20px\" }}\r\n            aria-label=\"delete\"\r\n            disabled\r\n            color=\"primary\"\r\n          >\r\n            <CloseRoundedIcon size={10} />\r\n          </IconButton>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"map__marker\" onClick={() => setShowDialog(true)}>\r\n        <img\r\n          className=\"map__marker__image\"\r\n          //   src=\"https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png\"\r\n          src=\"http://ishandeveloper.com/map-marker-light.png\"\r\n        />\r\n        {/* <div className=\"marker__circle\"></div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ClusterCircle = ({ count, factor }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        width: `${10 + factor * 40}px`,\r\n        height: `${10 + factor * 40}px`,\r\n      }}\r\n      className=\"cluster-marker-circle\"\r\n    >\r\n      {count}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function DashMap() {\r\n  const [zoom, setZoom] = useState(10);\r\n  const [bounds, setBounds] = useState(null);\r\n  const mapRef = useRef();\r\n\r\n  const points = dummyLocations.map((location) => ({\r\n    type: \"Feature\",\r\n    properties: {\r\n      cluster: false,\r\n      index: location.index,\r\n      category: \"power\",\r\n    },\r\n    geometry: { type: \"Point\", coordinates: [location.lng, location.lat] },\r\n  }));\r\n\r\n  const { clusters } = useSupercluster({\r\n    points,\r\n    bounds,\r\n    zoom,\r\n    options: { radius: 75, maxZoom: 20 },\r\n  });\r\n\r\n  function createMapOptions(maps) {\r\n    return {\r\n      panControl: true,\r\n      mapTypeControl: true,\r\n      scrollwheel: true,\r\n      styles: darkMapStyles,\r\n    };\r\n  }\r\n  return (\r\n    <div style={{ height: \"100vh\", width: \"100%\" }} id=\"dash-map\">\r\n      <GoogleMapReact\r\n        // draggable={false}\r\n        bootstrapURLKeys={{ key: \"AIzaSyDggofUxTHuVIyd7vsZooPN7JLaA-MvY7E\" }}\r\n        defaultCenter={{\r\n          lat: 30.7333,\r\n          lng: 76.7794,\r\n        }}\r\n        yesIWantToUseGoogleMapApiInternals={true}\r\n        onGoogleApiLoaded={({ map }) => {\r\n          mapRef.current = map;\r\n        }}\r\n        options={createMapOptions}\r\n        defaultZoom={10}\r\n        onChange={({ zoom, bounds }) => {\r\n          setZoom(zoom);\r\n          setBounds([\r\n            bounds.nw.lng,\r\n            bounds.se.lat,\r\n            bounds.se.lng,\r\n            bounds.nw.lat,\r\n          ]);\r\n        }}\r\n      >\r\n        {clusters.map((cluster, index) => {\r\n          const [lng, lat] = cluster.geometry.coordinates;\r\n          const {\r\n            cluster: isCluster,\r\n            point_count: pointCount,\r\n          } = cluster.properties;\r\n\r\n          if (isCluster) {\r\n            return (\r\n              <ClusterCircle\r\n                key={index}\r\n                lat={lat}\r\n                lng={lng}\r\n                count={pointCount}\r\n                factor={pointCount / points.length}\r\n              />\r\n            );\r\n          }\r\n\r\n          return <AnyReactComponent key={index} lat={lat} lng={lng} />;\r\n        })}\r\n        {/* {dummyLocations.map((loc) => (\r\n          <AnyReactComponent key={loc.index} lat={loc.lat} lng={loc.lng} />\r\n        ))} */}\r\n      </GoogleMapReact>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":25,"column":6,"nodeType":"157","endLine":25,"endColumn":8,"suggestions":"158"},{"ruleId":"159","severity":1,"message":"160","line":67,"column":30,"nodeType":"161","messageId":"162","endLine":67,"endColumn":32},{"ruleId":"163","severity":1,"message":"164","line":70,"column":13,"nodeType":"165","endLine":74,"endColumn":15},{"ruleId":"163","severity":1,"message":"164","line":80,"column":21,"nodeType":"165","endLine":84,"endColumn":23},{"ruleId":"163","severity":1,"message":"164","line":85,"column":21,"nodeType":"165","endLine":89,"endColumn":23},{"ruleId":"163","severity":1,"message":"164","line":92,"column":21,"nodeType":"165","endLine":96,"endColumn":23},{"ruleId":"163","severity":1,"message":"164","line":97,"column":21,"nodeType":"165","endLine":101,"endColumn":23},{"ruleId":"163","severity":1,"message":"164","line":105,"column":21,"nodeType":"165","endLine":109,"endColumn":23},{"ruleId":"163","severity":1,"message":"164","line":114,"column":21,"nodeType":"165","endLine":118,"endColumn":23},{"ruleId":"163","severity":1,"message":"164","line":121,"column":21,"nodeType":"165","endLine":125,"endColumn":23},{"ruleId":"163","severity":1,"message":"164","line":155,"column":15,"nodeType":"165","endLine":155,"endColumn":78},{"ruleId":"163","severity":1,"message":"164","line":206,"column":11,"nodeType":"165","endLine":210,"endColumn":13},{"ruleId":"163","severity":1,"message":"164","line":211,"column":11,"nodeType":"165","endLine":215,"endColumn":13},{"ruleId":"163","severity":1,"message":"164","line":216,"column":11,"nodeType":"165","endLine":220,"endColumn":13},{"ruleId":"163","severity":1,"message":"164","line":221,"column":11,"nodeType":"165","endLine":225,"endColumn":13},{"ruleId":"163","severity":1,"message":"164","line":227,"column":11,"nodeType":"165","endLine":231,"endColumn":13},{"ruleId":"159","severity":1,"message":"160","line":44,"column":35,"nodeType":"161","messageId":"162","endLine":44,"endColumn":37},{"ruleId":"166","severity":1,"message":"167","line":19,"column":9,"nodeType":"168","messageId":"169","endLine":19,"endColumn":23},{"ruleId":"159","severity":1,"message":"160","line":43,"column":31,"nodeType":"161","messageId":"162","endLine":43,"endColumn":33},{"ruleId":"159","severity":1,"message":"160","line":45,"column":38,"nodeType":"161","messageId":"162","endLine":45,"endColumn":40},{"ruleId":"159","severity":1,"message":"160","line":72,"column":20,"nodeType":"161","messageId":"162","endLine":72,"endColumn":22},{"ruleId":"159","severity":1,"message":"160","line":72,"column":67,"nodeType":"161","messageId":"162","endLine":72,"endColumn":69},{"ruleId":"159","severity":1,"message":"160","line":73,"column":20,"nodeType":"161","messageId":"162","endLine":73,"endColumn":22},{"ruleId":"159","severity":1,"message":"160","line":73,"column":67,"nodeType":"161","messageId":"162","endLine":73,"endColumn":69},{"ruleId":"159","severity":1,"message":"160","line":74,"column":20,"nodeType":"161","messageId":"162","endLine":74,"endColumn":22},{"ruleId":"159","severity":1,"message":"160","line":74,"column":67,"nodeType":"161","messageId":"162","endLine":74,"endColumn":69},{"ruleId":"159","severity":1,"message":"160","line":133,"column":27,"nodeType":"161","messageId":"162","endLine":133,"endColumn":29},{"ruleId":"163","severity":1,"message":"164","line":268,"column":9,"nodeType":"165","endLine":272,"endColumn":11},{"ruleId":"166","severity":1,"message":"170","line":7,"column":9,"nodeType":"168","messageId":"169","endLine":7,"endColumn":16},{"ruleId":"166","severity":1,"message":"170","line":9,"column":9,"nodeType":"168","messageId":"169","endLine":9,"endColumn":16},{"ruleId":"166","severity":1,"message":"170","line":9,"column":9,"nodeType":"168","messageId":"169","endLine":9,"endColumn":16},{"ruleId":"166","severity":1,"message":"171","line":1,"column":27,"nodeType":"168","messageId":"169","endLine":1,"endColumn":36},{"ruleId":"163","severity":1,"message":"164","line":10,"column":9,"nodeType":"165","endLine":14,"endColumn":11},{"ruleId":"159","severity":1,"message":"160","line":18,"column":31,"nodeType":"161","messageId":"162","endLine":18,"endColumn":33},{"ruleId":"159","severity":1,"message":"160","line":67,"column":34,"nodeType":"161","messageId":"162","endLine":67,"endColumn":36},{"ruleId":"151","replacedBy":"172"},{"ruleId":"153","replacedBy":"173"},{"ruleId":"155","severity":1,"message":"174","line":47,"column":6,"nodeType":"157","endLine":47,"endColumn":8,"suggestions":"175"},{"ruleId":"163","severity":1,"message":"164","line":74,"column":9,"nodeType":"165","endLine":78,"endColumn":11},"no-native-reassign",["176"],"no-negated-in-lhs",["177"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentUser' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["178"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'statusToString' is assigned a value but never used.","Identifier","unusedVar","'myChart' is assigned a value but never used.","'useEffect' is defined but never used.",["176"],["177"],"React Hook useEffect has a missing dependency: 'getLocation'. Either include it or remove the dependency array.",["179"],"no-global-assign","no-unsafe-negation",{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},"Update the dependencies array to be: [currentUser, history]",{"range":"184","text":"185"},"Update the dependencies array to be: [getLocation]",{"range":"186","text":"187"},[877,879],"[currentUser, history]",[1782,1784],"[getLocation]"]